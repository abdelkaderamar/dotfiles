#! /bin/bash

### Colors ################################################
RED='\033[0;31m'
GREEN='\033[0;32m'
BROWN='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
NC='\033[0m'

### Logging ################################################
function e_header()  { echo -e "\n\033[1m$@\033[0m"; }
function e_success() { echo -e " \033[1;32m✔\033[0m  $@"; }
function e_error()   { echo -e " \033[1;31m✖\033[0m  $@"; }
function e_arrow()   { echo -e " \033[1;34m➜\033[0m  $@"; }
function e_warn()    { echo -e " \033[1;31m➜\033[0m  $@"; }
function echo_and_exit()
{
  exit_code=$1
  shift
  e_error "$@"
  exit $exit_code
}

### Create a directory than move all the files passed as
### parameter to it
function dirndmv()
{
  if [ $# -lt 2 ]
  then
    e_error 'Usage: dirndmv.sh <dir> {files}'
    return 1
  fi

  dir="$1"
  shift

  mkdir -p "$dir" && mv -vi "$@" "$dir"
}

### Unzip all the files in the current directory. If the
### operation succeed, the zip file is removed
unzip_all()
{
  for i in *.zip
  do
    if [ "$i" == '*.zip' ]
    then
      echo "No .zip files found"
      break;
    fi
    unzip "$i" -d "$extract_dir"
    if [ $? -ne 0 ]
    then
      mv -v "$i" "${FAIL_DIR}"/
    else
      rm -v "$i"
    fi
  done
}
